name: CI/CD Production

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov

      - name: Run tests
        run: |
          pytest --cov=app tests/

  build_and_push:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v2

      - name: Download model from staging
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: staging.yml
          workflow_conclusion: success
          name: diabetes-model
          path: models/

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/diabetes-api:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/diabetes-api:${{ github.sha }}

  deploy_production:
    runs-on: ubuntu-latest
    needs: build_and_push
    steps:
      - name: Deploy to production environment
        run: |
          echo "Simulando despliegue a entorno de producción..."
          # Aquí iría el código para desplegar a un entorno de producción
          # Por ejemplo, actualizar un clúster de Kubernetes, un servicio en la nube, etc.
          echo "Despliegue completado en entorno de producción."